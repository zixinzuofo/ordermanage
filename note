- node
sudo apt install nodejs -y

-npm
sudo apt install npm -y

-pm2
sudo npm install -g pm2

- aws iam for ec2
https://blog.csdn.net/u010478127/article/details/106850328

- aws
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
sudo apt install unzip
unzip awscliv2.zip
sudo ./aws/install

- install nginx
wget -qO - https://openresty.org/package/pubkey.gpg | sudo apt-key add - \
&& sudo apt-get -y install software-properties-common \
&& sudo add-apt-repository -y "deb http://openresty.org/package/ubuntu $(lsb_release -sc) main" \
&& sudo apt-get update \
&& sudo apt-get install -y libpcre3-dev \
    libssl-dev perl make build-essential curl \
&& sudo apt-get update \
&& sudo apt-get install openresty -y

sudo ln -s /usr/local/openresty/nginx/sbin/nginx /usr/local/bin/nginx

- install mysql
sudo apt-get update
sudo apt-get install mysql-server
sudo mysql_secure_installation
sudo service mysql restart

- mysql配置修改
https://blog.csdn.net/u012572955/article/details/54600153
sudo vi /etc/mysql/my.cnf
[mysqld]
table_open_cache = 128
table_open_cache_instances = 1
performance_schema_max_table_instances = 200
table_definition_cache = 200
default-time_zone='+8:00'

[client]
host=localhost
user=root
password='111111'

mysql -uroot -p
SET GLOBAL validate_password.length = 6;
SET GLOBAL validate_password.policy='LOW';
ALTER USER 'root'@'localhost' IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY '111111';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION;
FLUSH PRIVILEGES;

- 修改时区
tzselect
cp /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime

- 增加EC2访问S3的IAM角色
在aws控制台操作

- 导入mysql数据
aws s3 cp s3://dbbackup.df-ordermanage/ordermanage.sql.gz ordermanage.sql.gz
gunzip ordermanage.sql.gz
mysql -uroot -p
create database ordermanage;
source ordermanage.sql

- 下载ordermanage代码
git clone https://github.com/zixinzuofo/ordermanage.git
pm2 start ordermanage/bin/www --watch --name ordermanage

- 修改nginx并重启
cd /usr/local/openresty/nginx/conf
sudo vi nginx.conf
location /ordermanage/ {
    proxy_pass http://localhost:9999;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}
sudo nginx -s reload

- 测试
curl -XPOST http://ec2_ip/ordermanage/login

- 定时备份数据上传到s3
mkdir dbbackup
cd dbbackup
touch mysqldump.sh
-------
#!/bin/bash

echo 'start backup ordermanage database at time' $(date "+%Y-%m-%d %H:%M:%S")
mysqldump --defaults-extra-file=/etc/mysql/my.cnf ordermanage | gzip > /home/ubuntu/dbbackup/ordermanage.sql.gz
/usr/local/bin/aws s3 cp /home/ubuntu/dbbackup/ordermanage.sql.gz s3://dbbackup.df-ordermanage
-------
crontab -e
0 8 * * * TZ='Asia/Shanghai' sh /home/ubuntu/dbbackup/mysqldump.sh >> /home/ubuntu/dbbackup/mysqldump.log 2>&1

